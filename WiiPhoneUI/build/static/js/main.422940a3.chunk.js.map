{"version":3,"sources":["ControllerButton.js","App.js","index.js"],"names":["ControllerButton","props","className","pressed","round","onTouchStart","buttonPressed","onTouchMove","onTouchEnd","buttonReleased","onTouchCancel","buttonDisplay","App","useState","timestamp","Date","now","Recenter","A","B","AB","One","Two","Minus","Plus","Home","Up","Down","Left","Right","acceleration","x","y","z","rotation","alpha","beta","gamma","controllerData","setControllerData","connected","setConnected","webSocket","setWebSocket","motionEnabled","setMotionEnabled","controllerId","setControllerId","setButtonData","key","value","currentControllerData","useEffect","bar","window","location","href","wsAddress","match","newWebSocket","WebSocket","onopen","ws_evnt","onmessage","data","sendControllerData","send","JSON","stringify","interval","setInterval","clearInterval","toString","onClick","DeviceMotionEvent","requestPermission","Promise","res","then","permissionState","addEventListener","event","accelerationIncludingGravity","rotationRate","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.422940a3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default function ControllerButton(props) {\r\n    return (\r\n        <div \r\n            className={\"controllerButton \"+(props.pressed ? \"controllerButtonActive \" : \"\")+(props.round ? \"controllerButtonRound \" : \"\")}\r\n            onTouchStart={() => {props.buttonPressed()}}\r\n            onTouchMove={() => {props.buttonPressed()}}\r\n            onTouchEnd={() => {props.buttonReleased()}}\r\n            onTouchCancel={() => {props.buttonReleased()}}\r\n        >\r\n            {props.buttonDisplay}\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\nimport ControllerButton from \"./ControllerButton\";\nimport \"./style.css\";\n\nexport default function App() {\n    const [controllerData, setControllerData] = useState({\n        timestamp: Date.now(),\n        Recenter: 0,\n        A: 0,\n        B: 0,\n        AB: 0,\n        One: 0,\n        Two: 0,\n        Minus: 0,\n        Plus: 0,\n        Home: 0,\n        Up: 0,\n        Down: 0,\n        Left: 0,\n        Right: 0,\n        acceleration: { x: 0, y: 0, z: 0 },\n        rotation: { alpha: 0, beta: 0, gamma: 0 }\n    });\n    const [connected, setConnected] = useState(false);\n    const [webSocket, setWebSocket] = useState(null);\n    const [motionEnabled, setMotionEnabled] = useState(false);\n    const [controllerId, setControllerId] = useState(\"N/A\");\n    const motionWeight = 1;\n    const rotationWeight = 1;\n\n    function askForPermission() {\n        if (DeviceMotionEvent != null) {\n            const permission = DeviceMotionEvent.requestPermission != null && typeof DeviceMotionEvent.requestPermission === \"function\" ?\n                DeviceMotionEvent.requestPermission() :\n                new Promise(res => res(\"granted\"));\n            permission.then(permissionState => {\n                if (permissionState === \"granted\") {\n                    setMotionEnabled(true);\n                    window.addEventListener(\"devicemotion\", event => {\n                        setControllerData((currentControllerData) => {\n                            return {\n                                ...currentControllerData,\n                                timestamp: Date.now(),\n                                acceleration: { \n                                    x: ((1 - motionWeight) * currentControllerData.acceleration.x + motionWeight * event.accelerationIncludingGravity.x) / 9.8, \n                                    y: ((1 - motionWeight) * currentControllerData.acceleration.z + motionWeight * event.accelerationIncludingGravity.z) / 9.8, \n                                    z: -((1 - motionWeight) * currentControllerData.acceleration.y + motionWeight * event.accelerationIncludingGravity.y) / 9.8\n                                },\n                                rotation: {\n                                    alpha: ((1-rotationWeight) * currentControllerData.rotation.alpha + rotationWeight * event.rotationRate.alpha),\n                                    beta: -((1-rotationWeight) * currentControllerData.rotation.gamma + rotationWeight * event.rotationRate.gamma),\n                                    gamma: ((1-rotationWeight) * currentControllerData.rotation.beta + rotationWeight * event.rotationRate.beta)\n                                }\n                            }\n                        });\n                    })\n                }\n            });\n        }\n    }\n\n    useEffect(() => {\n        const bar = window.location.href;\n        const wsAddress = `wss://${bar.match(/^https?:\\/\\/([^:]+).+$/)[1]}:1338`;\n        const newWebSocket = new WebSocket(wsAddress);\n        setWebSocket(newWebSocket);\n        newWebSocket.onopen = function (ws_evnt) {\n            setConnected(true);\n        }\n        newWebSocket.onmessage = function (ws_evnt) {\n            setControllerId(ws_evnt.data);\n        }\n    }, [])\n\n    useEffect(() => {\n        function sendControllerData() {\n            if (connected) {\n                webSocket.send(JSON.stringify(controllerData));\n            }\n        }\n        sendControllerData();\n        //Don't stop sending controller data just because nothing changes\n        const interval = setInterval(() => {\n            sendControllerData();\n        },16)\n        return () => clearInterval(interval);\n    }, [controllerData, webSocket, connected]);\n\n    function setButtonData(key, value) {\n        setControllerData((currentControllerData) => { return { ...currentControllerData, [key]: value }});\n    }\n\n    return (\n        <div className=\"App\">\n            <div className=\"infoWrapper\">\n                <div>Connected: {connected.toString()}, Motion Enabled: {motionEnabled.toString()}</div>\n                <div>Controller Slot: {controllerId.toString()}</div>\n                <button onClick={askForPermission}>Give Motion Control Permission</button>\n            </div>\n            <div className=\"controllerWrapper\">\n                <div className=\"controllerRowWrapper\">\n                    <ControllerButton buttonDisplay=\"^\" pressed={controllerData.Up === 1} buttonPressed={() => { setButtonData(\"Up\", 1) }} buttonReleased={() => { setButtonData(\"Up\", 0) }} />\n                </div>\n                <div className=\"controllerRowWrapper\">\n                    <ControllerButton buttonDisplay=\"<\" pressed={controllerData.Left === 1} buttonPressed={() => { setButtonData(\"Left\", 1) }} buttonReleased={() => { setButtonData(\"Left\", 0) }} />\n                    <ControllerButton buttonDisplay=\">\" pressed={controllerData.Right === 1} buttonPressed={() => { setButtonData(\"Right\", 1) }} buttonReleased={() => { setButtonData(\"Right\", 0) }} />\n                </div>\n                <div className=\"controllerRowWrapper\">\n                    <ControllerButton buttonDisplay=\"v\" pressed={controllerData.Down === 1} buttonPressed={() => { setButtonData(\"Down\", 1) }} buttonReleased={() => { setButtonData(\"Down\", 0) }} />\n                </div>\n                <div className=\"controllerRowWrapper\">\n                    <ControllerButton round buttonDisplay=\"A\" pressed={controllerData.A === 1 || controllerData.AB === 1} buttonPressed={() => { setButtonData(\"A\", 1) }} buttonReleased={() => { setButtonData(\"A\", 0) }} />\n                    <ControllerButton buttonDisplay=\"B\" pressed={controllerData.B === 1 || controllerData.AB === 1} buttonPressed={() => { setButtonData(\"B\", 1) }} buttonReleased={() => { setButtonData(\"B\", 0) }} />\n                </div>\n                <div className=\"controllerRowWrapper\">\n                    <ControllerButton buttonDisplay=\"Center\" pressed={controllerData.Recenter === 1} buttonPressed={() => { setButtonData(\"Recenter\", 1) }} buttonReleased={() => { setButtonData(\"Recenter\", 0) }} />\n                    <ControllerButton buttonDisplay=\"A/B\" pressed={controllerData.AB === 1 || (controllerData.A === 1 && controllerData.B === 1)} buttonPressed={() => { setButtonData(\"AB\", 1) }} buttonReleased={() => { setButtonData(\"AB\", 0) }} />\n                </div>\n                <div className=\"controllerRowWrapper\">\n                    <ControllerButton round buttonDisplay=\"-\" pressed={controllerData.Minus === 1} buttonPressed={() => { setButtonData(\"Minus\", 1) }} buttonReleased={() => { setButtonData(\"Minus\", 0) }} />\n                    <ControllerButton round buttonDisplay=\"Home\" pressed={controllerData.Home === 1} buttonPressed={() => { setButtonData(\"Home\", 1) }} buttonReleased={() => { setButtonData(\"Home\", 0) }} />\n                    <ControllerButton round buttonDisplay=\"+\" pressed={controllerData.Plus === 1} buttonPressed={() => { setButtonData(\"Plus\", 1) }} buttonReleased={() => { setButtonData(\"Plus\", 0) }} />\n                </div>\n                <div className=\"controllerRowWrapper\">\n                    <ControllerButton round buttonDisplay=\"1\" pressed={controllerData.One === 1} buttonPressed={() => { setButtonData(\"One\", 1) }} buttonReleased={() => { setButtonData(\"One\", 0) }} />\n                </div>\n                <div className=\"controllerRowWrapper\">\n                    <ControllerButton round buttonDisplay=\"2\" pressed={controllerData.Two === 1} buttonPressed={() => { setButtonData(\"Two\", 1) }} buttonReleased={() => { setButtonData(\"Two\", 0) }} />\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport './style.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}