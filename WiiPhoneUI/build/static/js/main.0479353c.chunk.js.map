{"version":3,"sources":["ControllerButton.js","App.js","index.js"],"names":["ControllerButton","props","className","pressed","round","onTouchStart","buttonPressed","onTouchEnd","buttonReleased","buttonDisplay","App","useState","acceleration","x","y","z","rotation","alpha","beta","gamma","motionEvent","setMotionEvent","timestamp","Date","now","Recenter","A","B","One","Two","Minus","Plus","Home","Up","Down","Left","Right","controllerData","setControllerData","connected","setConnected","webSocket","setWebSocket","motionEnabled","setMotionEnabled","controllerId","setControllerId","useEffect","document","body","style","overflow","bar","window","location","href","wsAddress","match","newWebSocket","WebSocket","onopen","ws_evnt","onmessage","data","currentControllerData","send","JSON","stringify","setButtonData","key","value","toString","onClick","DeviceMotionEvent","requestPermission","Promise","res","then","permissionState","addEventListener","event","currentMotionEvent","accelerationIncludingGravity","rotationRate","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.0479353c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default function ControllerButton(props) {\r\n    return (\r\n        <div \r\n            className={\"controllerButton \"+(props.pressed ? \"controllerButtonActive \" : \"\")+(props.round ? \"controllerButtonRound \" : \"\")}\r\n            onTouchStart={() => {props.buttonPressed()}} \r\n            onTouchEnd={() => {props.buttonReleased()}} \r\n        >\r\n            {props.buttonDisplay}\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\nimport ControllerButton from \"./ControllerButton\";\nimport \"./style.css\";\n\nexport default function App() {\n    const [motionEvent, setMotionEvent] = useState({\n        acceleration: { x: 0, y: 0, z: 0 },\n        rotation: { alpha: 0, beta: 0, gamma: 0 }\n    });\n    const [controllerData, setControllerData] = useState({\n        timestamp: Date.now(),\n        Recenter: 0,\n        A: 0,\n        B: 0,\n        One: 0,\n        Two: 0,\n        Minus: 0,\n        Plus: 0,\n        Home: 0,\n        Up: 0,\n        Down: 0,\n        Left: 0,\n        Right: 0,\n        acceleration: { x: 0, y: 0, z: 0 },\n        rotation: { alpha: 0, beta: 0, gamma: 0 }\n    });\n    const [connected, setConnected] = useState(false);\n    const [webSocket, setWebSocket] = useState(null);\n    const [motionEnabled, setMotionEnabled] = useState(false);\n    const [controllerId, setControllerId] = useState(\"N/A\");\n    const motionWeight = 1;\n    const rotationWeight = 1;\n\n    const askForPermission = () => {\n        if (DeviceMotionEvent != null) {\n            const permission = DeviceMotionEvent.requestPermission != null && typeof DeviceMotionEvent.requestPermission === \"function\" ?\n                DeviceMotionEvent.requestPermission() :\n                new Promise(res => res(\"granted\"));\n            permission.then(permissionState => {\n                if (permissionState === \"granted\") {\n                    setMotionEnabled(true);\n                    window.addEventListener(\"devicemotion\", event => {\n                        setMotionEvent((currentMotionEvent) => {\n                            return {\n                                acceleration: { \n                                    x: ((1 - motionWeight) * currentMotionEvent.acceleration.x + motionWeight * event.accelerationIncludingGravity.x) / 9.8, \n                                    y: ((1 - motionWeight) * currentMotionEvent.acceleration.z + motionWeight * event.accelerationIncludingGravity.z) / 9.8, \n                                    z: -((1 - motionWeight) * currentMotionEvent.acceleration.y + motionWeight * event.accelerationIncludingGravity.y) / 9.8\n                                },\n                                rotation: {\n                                    alpha: ((1-rotationWeight) * currentMotionEvent.rotation.alpha + rotationWeight * event.rotationRate.alpha),\n                                    beta: -((1-rotationWeight) * currentMotionEvent.rotation.gamma + rotationWeight * event.rotationRate.gamma),\n                                    gamma: ((1-rotationWeight) * currentMotionEvent.rotation.beta + rotationWeight * event.rotationRate.beta)\n                                }\n                            }\n                        });\n                    })\n                }\n            });\n        }\n    }\n\n    useEffect(() => {\n        document.body.style.overflow = \"hidden\";\n\n        const bar = window.location.href;\n        const wsAddress = `wss://${bar.match(/^https?:\\/\\/([^:]+).+$/)[1]}:1338`;\n        const newWebSocket = new WebSocket(wsAddress);\n        setWebSocket(newWebSocket);\n        newWebSocket.onopen = function (ws_evnt) {\n            setConnected(true);\n        }\n        newWebSocket.onmessage = function (ws_evnt) {\n            setControllerId(ws_evnt.data);\n        }\n    }, [])\n\n    useEffect(() => {\n        setControllerData((currentControllerData) => {\n            currentControllerData.timestamp = Date.now();\n            currentControllerData.acceleration = motionEvent.acceleration;\n            currentControllerData.rotation = motionEvent.rotation;\n            if (connected) {\n                webSocket.send(JSON.stringify(currentControllerData));\n            }\n            return { ...currentControllerData }\n        });\n    }, [motionEvent, webSocket, connected])\n\n    const setButtonData = (key, value) => {\n        controllerData[key] = value;\n        setControllerData({ ...controllerData });\n    }\n\n    return (\n        <div className=\"App\">\n            <div className=\"infoWrapper\">\n                <div>Connected: {connected.toString()}, Motion Enabled: {motionEnabled.toString()}</div>\n                <div>Controller Slot: {controllerId.toString()}</div>\n                <button onClick={askForPermission}>Give Motion Control Permission</button>\n            </div>\n            <div className=\"controllerWrapper\">\n                <div className=\"controllerRowWrapper\">\n                    <ControllerButton buttonDisplay=\"Center\" pressed={controllerData.Recenter === 1} buttonPressed={() => { setButtonData(\"Recenter\", 1) }} buttonReleased={() => { setButtonData(\"Recenter\", 0) }} />\n                </div>\n                <div className=\"controllerRowWrapper\">\n                    <ControllerButton buttonDisplay=\"^\" pressed={controllerData.Up === 1} buttonPressed={() => { setButtonData(\"Up\", 1) }} buttonReleased={() => { setButtonData(\"Up\", 0) }} />\n                </div>\n                <div className=\"controllerRowWrapper\">\n                    <ControllerButton buttonDisplay=\"<\" pressed={controllerData.Left === 1} buttonPressed={() => { setButtonData(\"Left\", 1) }} buttonReleased={() => { setButtonData(\"Left\", 0) }} />\n                    <ControllerButton buttonDisplay=\">\" pressed={controllerData.Right === 1} buttonPressed={() => { setButtonData(\"Right\", 1) }} buttonReleased={() => { setButtonData(\"Right\", 0) }} />\n                </div>\n                <div className=\"controllerRowWrapper\">\n                    <ControllerButton buttonDisplay=\"v\" pressed={controllerData.Down === 1} buttonPressed={() => { setButtonData(\"Down\", 1) }} buttonReleased={() => { setButtonData(\"Down\", 0) }} />\n                </div>\n                <div className=\"controllerRowWrapper\">\n                    <ControllerButton round buttonDisplay=\"A\" pressed={controllerData.A === 1} buttonPressed={() => { setButtonData(\"A\", 1) }} buttonReleased={() => { setButtonData(\"A\", 0) }} />\n                    <ControllerButton buttonDisplay=\"B\" pressed={controllerData.B === 1} buttonPressed={() => { setButtonData(\"B\", 1) }} buttonReleased={() => { setButtonData(\"B\", 0) }} />\n                </div>\n                <div className=\"controllerRowWrapper\">\n                    <ControllerButton round buttonDisplay=\"-\" pressed={controllerData.Minus === 1} buttonPressed={() => { setButtonData(\"Minus\", 1) }} buttonReleased={() => { setButtonData(\"Minus\", 0) }} />\n                    <ControllerButton round buttonDisplay=\"Home\" pressed={controllerData.Home === 1} buttonPressed={() => { setButtonData(\"Home\", 1) }} buttonReleased={() => { setButtonData(\"Home\", 0) }} />\n                    <ControllerButton round buttonDisplay=\"+\" pressed={controllerData.Plus === 1} buttonPressed={() => { setButtonData(\"Plus\", 1) }} buttonReleased={() => { setButtonData(\"Plus\", 0) }} />\n                </div>\n                <div className=\"controllerRowWrapper\">\n                    <ControllerButton round buttonDisplay=\"1\" pressed={controllerData.One === 1} buttonPressed={() => { setButtonData(\"One\", 1) }} buttonReleased={() => { setButtonData(\"One\", 0) }} />\n                </div>\n                <div className=\"controllerRowWrapper\">\n                    <ControllerButton round buttonDisplay=\"2\" pressed={controllerData.Two === 1} buttonPressed={() => { setButtonData(\"Two\", 1) }} buttonReleased={() => { setButtonData(\"Two\", 0) }} />\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport './style.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}